{"memberVariables": {"parentScope=0": "int", "functionBracePositions=new ArrayList()": "ArrayList", "funcObjects=new ObjArray()": "ObjArray", "functionNum=0": "int", "functionVarMappings=new ArrayList()": "ArrayList", "lastTokenCount=0": "int", "replacedTokens=new ArrayList()": "ArrayList"}, "code": ["void", "function", "(", "ScriptOrFnNode", "parseTree", ")", "{", "int", "level", "=", "-", "1", ";", "collectFuncNodes", "(", "parseTree", ",", "level", ",", "null", ")", ";", "}"], "memberFunctions": {"isInScopeChain": [["boolean", "String token"]], "reset": [["void"]], "leaveNestingLevel": [["void", "int braceNesting"]], "getMappedToken": [["String", "String token", "boolean hasNewMapping"]], "getPreviousTokenMapping": [["String", "String token", "boolean hasNewMapping"]], "collectFuncNodes": [["void", "ScriptOrFnNode parseTree", "int level", "ScriptOrFnNode parent"]], "sourceCompress": [["int", "String encodedSource", "int offset", "boolean asQuotedString", "StringBuffer sb", "int prevToken", "boolean inArgsList", "int currentLevel", "ScriptOrFnNode parseTree"]], "enterNestingLevel": [["void", "int braceNesting"]]}, "className": "TokenMapper", "renamed": ["void", "function", "(", "ScriptOrFnNode", "arg0", ")", "{", "int", "loc0", "=", "-", "1", ";", "collectFuncNodes", "(", "arg0", ",", "loc0", ",", "null", ")", ";", "}"], "nl": "Generate mappings for each Function node and parameters and variables names associated with it. ", "nlToks": ["Generate", "mappings", "for", "each", "Function", "node", "and", "parameters", "and", "variables", "names", "associated", "with", "it", "."], "path": "adamfisk/littleshoot-client/tree/master/server/static/build/src/main/webapp/dojo/util/shrinksafe/src/org/dojotoolkit/shrinksafe/TokenMapper.java", "idx": 0}
{"memberVariables": {"ZERO_HASH=new Sha256Hash(new byte[32])": "Sha256Hash", "bytes": "byte[]"}, "code": ["Sha256Hash", "function", "(", "File", "f", ")", "{", "FileInputStream", "in", "=", "new", "FileInputStream", "(", "f", ")", ";", "try", "{", "return", "create", "(", "ByteStreams", ".", "toByteArray", "(", "in", ")", ")", ";", "}", "finally", "{", "in", ".", "close", "(", ")", ";", "}", "}"], "memberFunctions": {"createDouble": [["Sha256Hash", "byte[] contents"]], "hashCode": [["int"]], "equals": [["boolean", "Object o"]], "create": [["Sha256Hash", "byte[] contents"]], "toBigInteger": [["BigInteger"]], "toString": [["String"]], "duplicate": [["Sha256Hash"]], "compareTo": [["int", "Sha256Hash o"]], "getBytes": [["byte[]"]]}, "className": "Sha256Hash", "renamed": ["Sha256Hash", "function", "(", "File", "arg0", ")", "{", "FileInputStream", "loc0", "=", "new", "FileInputStream", "(", "arg0", ")", ";", "try", "{", "return", "create", "(", "ByteStreams", ".", "toByteArray", "(", "loc0", ")", ")", ";", "}", "finally", "{", "loc0", ".", "close", "(", ")", ";", "}", "}"], "nl": "Returns a hash of the given files contents. Reads the file fully into memory before hashing so only use with small files.", "nlToks": ["Returns", "a", "hash", "of", "the", "given", "files", "contents", ".", "Reads", "the", "file", "fully", "into", "memory", "before", "hashing", "so", "only", "use", "with", "small", "files", "."], "path": "1000000000001/bitcoinj/tree/master/core/src/main/java/org/bitcoinj/core/Sha256Hash.java", "idx": 2}
{"memberVariables": {"LOG=Logger.getLogger(ItemUID.class)": "Logger", "MYCLASS=(new ItemUID()).getClass()": "Class", "id": "String"}, "code": ["String", "function", "(", "Object", "obj", ",", "boolean", "canCreate", ")", "{", "String", "s", "=", "readObjectID", "(", "obj", ")", ";", "if", "(", "s", "==", "null", "&&", "canCreate", ")", "{", "s", "=", "createObjectID", "(", "obj", ")", ";", "}", "return", "s", ";", "}"], "memberFunctions": {"readObjectID": [["String", "Object obj"]], "createObjectID": [["String", "Object obj"]], "generateID": [["String"]], "toString": [["String"]]}, "className": "ItemUID", "renamed": ["String", "function", "(", "Object", "arg0", ",", "boolean", "arg1", ")", "{", "String", "loc0", "=", "readObjectID", "(", "arg0", ")", ";", "if", "(", "loc0", "==", "null", "&&", "arg1", ")", "{", "loc0", "=", "createObjectID", "(", "arg0", ")", ";", "}", "return", "loc0", ";", "}"], "nl": "Obtains the ID of an object and returns it as a String. If canCreate is true it will try to create a new ID for the object if it has none.", "nlToks": ["Obtains", "the", "ID", "of", "an", "object", "and", "returns", "it", "as", "a", "String", ".", "If", "canCreate", "is", "true", "it", "will", "try", "to", "create", "a", "new", "ID", "for", "the", "object", "if", "it", "has", "none", "."], "path": "pichiliani/CoArgoUML/tree/master/v0.24/fonte/src/argouml-app/src/org/argouml/util/ItemUID.java", "idx": 3}
{"memberVariables": {}, "code": ["Matcher", "<", "T", ">", "function", "(", "T", "value", ")", "{", "return", "ComparatorMatcherBuilder", ".", "<", "T", ">", "usingNaturalOrdering", "(", ")", ".", "greaterThan", "(", "value", ")", ";", "}"], "memberFunctions": {"lessThan": [["Matcher<T>", "T value"]], "comparesEqualTo": [["Matcher<T>", "T value"]], "greaterThanOrEqualTo": [["Matcher<T>", "T value"]], "lessThanOrEqualTo": [["Matcher<T>", "T value"]]}, "className": "OrderingComparison", "renamed": ["Matcher", "<", "T", ">", "function", "(", "T", "arg0", ")", "{", "return", "ComparatorMatcherBuilder", ".", "<", "T", ">", "usingNaturalOrdering", "(", ")", ".", "greaterThan", "(", "arg0", ")", ";", "}"], "nl": "Creates a matcher of  {@link Comparable} object that matches when the examined object isgreater than the specified value, as reported by the compareTo method of the examined object. For example: assertThat(2, greaterThan(1))", "nlToks": ["Creates", "a", "matcher", "of", "-LCB-", "@link", "Comparable", "-RCB-", "object", "that", "matches", "when", "the", "examined", "object", "isgreater", "than", "the", "specified", "value", ",", "as", "reported", "by", "the", "compareTo", "method", "of", "the", "examined", "object", ".", "For", "example", ":", "assertThat", "-LRB-", "2", ",", "greaterThan", "-LRB-", "1", "-RRB-", "-RRB-"], "path": "plow/JavaHamcrest/tree/master/hamcrest-library/src/main/java/org/hamcrest/number/OrderingComparison.java", "idx": 4}
