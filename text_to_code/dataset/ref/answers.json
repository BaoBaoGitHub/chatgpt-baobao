{"code":"void function ( ScriptOrFnNode parseTree ) { int level = - 1 ; collectFuncNodes ( parseTree , level , null ) ; }","nl":"generate mappings for each function node and parameters and variables names associated with it . concode_field_sep int parentScope concode_elem_sep ArrayList functionBracePositions concode_elem_sep ObjArray funcObjects concode_elem_sep int functionNum concode_elem_sep ArrayList functionVarMappings concode_elem_sep int lastTokenCount concode_elem_sep ArrayList replacedTokens concode_field_sep boolean isInScopeChain concode_elem_sep void reset concode_elem_sep void leaveNestingLevel concode_elem_sep String getMappedToken concode_elem_sep String getPreviousTokenMapping concode_elem_sep void collectFuncNodes concode_elem_sep int sourceCompress concode_elem_sep void enterNestingLevel"}
{"code":"Sha256Hash function ( File f ) { FileInputStream in = new FileInputStream ( f ) ; try { return create ( ByteStreams . toByteArray ( in ) ) ; } finally { in . close ( ) ; } }","nl":"returns a hash of the given files contents . reads the file fully into memory before hashing so only use with small files . concode_field_sep Sha256Hash ZERO_HASH concode_elem_sep byte[] bytes concode_field_sep Sha256Hash createDouble concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep Sha256Hash create concode_elem_sep BigInteger toBigInteger concode_elem_sep String toString concode_elem_sep Sha256Hash duplicate concode_elem_sep int compareTo concode_elem_sep byte[] getBytes"}
{"code":"String function ( Object obj , boolean canCreate ) { String s = readObjectID ( obj ) ; if ( s == null && canCreate ) { s = createObjectID ( obj ) ; } return s ; }","nl":"obtains the id of an object and returns it as a string . if cancreate is true it will try to create a new id for the object if it has none . concode_field_sep Logger LOG concode_elem_sep Class MYCLASS concode_elem_sep String id concode_field_sep String readObjectID concode_elem_sep String createObjectID concode_elem_sep String generateID concode_elem_sep String toString"}
{"code":"Matcher < T > function ( T value ) { return ComparatorMatcherBuilder . < T > usingNaturalOrdering ( ) . greaterThan ( value ) ; }","nl":"creates a matcher of comparable object that matches when the examined object isgreater than the specified value , as reported by the compareto method of the examined object . for example : assertthat 2 , greaterthan 1 concode_field_sep PlaceHolder placeHolder concode_field_sep Matcher<T> lessThan concode_elem_sep Matcher<T> comparesEqualTo concode_elem_sep Matcher<T> greaterThanOrEqualTo concode_elem_sep Matcher<T> lessThanOrEqualTo"}
